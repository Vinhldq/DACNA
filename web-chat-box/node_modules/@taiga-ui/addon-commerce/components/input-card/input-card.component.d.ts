import type { OnInit } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@maskito/angular";
import * as i2 from "@taiga-ui/core/components/textfield";
export declare class TuiInputCard implements OnInit {
    private readonly icons;
    private readonly options;
    private readonly resolver;
    private readonly control;
    private readonly value;
    private readonly icon;
    private readonly accessor;
    protected readonly mask: import("@angular/core").WritableSignal<import("@maskito/core").MaskitoOptions | null>;
    protected readonly image: import("@angular/core").Signal<string | null>;
    autocomplete: boolean;
    readonly binChange: import("rxjs").Observable<string | null>;
    set iconValue(icon: string | null);
    ngOnInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiInputCard, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiInputCard, "input[tuiInputCard]", never, { "autocomplete": { "alias": "autocomplete"; "required": false; }; "iconValue": { "alias": "icon"; "required": false; }; }, { "binChange": "binChange"; }, never, never, true, [{ directive: typeof i1.MaskitoDirective; inputs: {}; outputs: {}; }, { directive: typeof i2.TuiWithTextfield; inputs: {}; outputs: {}; }]>;
}
