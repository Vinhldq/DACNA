import { Directive, inject, Input } from '@angular/core';
import { MaskitoDirective } from '@maskito/angular';
import { TUI_INPUT_CARD_OPTIONS } from '@taiga-ui/addon-commerce/components/input-card';
import { TUI_MASK_CVC } from '@taiga-ui/addon-commerce/constants';
import { TuiWithTextfield } from '@taiga-ui/core/components/textfield';
import { tuiMaskito } from '@taiga-ui/kit/utils';
import * as i0 from "@angular/core";
import * as i1 from "@maskito/angular";
import * as i2 from "@taiga-ui/core/components/textfield";
class TuiInputCVC {
    constructor() {
        this.mask = tuiMaskito(TUI_MASK_CVC(3));
        this.autocomplete = inject(TUI_INPUT_CARD_OPTIONS).autocomplete;
        this.hidden = true;
        this.length = 3;
    }
    // TODO: refactor to signal inputs after Angular update
    ngOnChanges() {
        this.mask.set(TUI_MASK_CVC(this.length));
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiInputCVC, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: TuiInputCVC, isStandalone: true, selector: "input[tuiInputCVC]", inputs: { autocomplete: "autocomplete", hidden: "hidden", length: "length" }, host: { attributes: { "inputmode": "numeric" }, listeners: { "copy.prevent": "(0)" }, properties: { "autocomplete": "autocomplete ? \"cc-csc\" : \"off\"", "placeholder": "\"0\".repeat(length)", "style.-webkit-text-security": "hidden ? \"disc\" : null" } }, usesOnChanges: true, hostDirectives: [{ directive: i1.MaskitoDirective }, { directive: i2.TuiWithTextfield }], ngImport: i0 }); }
}
export { TuiInputCVC };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiInputCVC, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    selector: 'input[tuiInputCVC]',
                    hostDirectives: [MaskitoDirective, TuiWithTextfield],
                    host: {
                        inputmode: 'numeric',
                        '[autocomplete]': 'autocomplete ? "cc-csc" : "off"',
                        '[placeholder]': '"0".repeat(length)',
                        '[style.-webkit-text-security]': 'hidden ? "disc" : null',
                        '(copy.prevent)': '(0)',
                    },
                }]
        }], propDecorators: { autocomplete: [{
                type: Input
            }], hidden: [{
                type: Input
            }], length: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtY3ZjLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2FkZG9uLWNvbW1lcmNlL2NvbXBvbmVudHMvaW5wdXQtY3ZjL2lucHV0LWN2Yy5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3ZELE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBQ2xELE9BQU8sRUFBQyxzQkFBc0IsRUFBQyxNQUFNLGdEQUFnRCxDQUFDO0FBQ3RGLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxvQ0FBb0MsQ0FBQztBQUNoRSxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxxQ0FBcUMsQ0FBQztBQUNyRSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0scUJBQXFCLENBQUM7Ozs7QUFFL0MsTUFZYSxXQUFXO0lBWnhCO1FBYXFCLFNBQUksR0FBRyxVQUFVLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFHN0MsaUJBQVksR0FBRyxNQUFNLENBQUMsc0JBQXNCLENBQUMsQ0FBQyxZQUFZLENBQUM7UUFHM0QsV0FBTSxHQUFHLElBQUksQ0FBQztRQUdkLFdBQU0sR0FBVSxDQUFDLENBQUM7S0FNNUI7SUFKRyx1REFBdUQ7SUFDaEQsV0FBVztRQUNkLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUM3QyxDQUFDOytHQWZRLFdBQVc7bUdBQVgsV0FBVzs7U0FBWCxXQUFXOzRGQUFYLFdBQVc7a0JBWnZCLFNBQVM7bUJBQUM7b0JBQ1AsVUFBVSxFQUFFLElBQUk7b0JBQ2hCLFFBQVEsRUFBRSxvQkFBb0I7b0JBQzlCLGNBQWMsRUFBRSxDQUFDLGdCQUFnQixFQUFFLGdCQUFnQixDQUFDO29CQUNwRCxJQUFJLEVBQUU7d0JBQ0YsU0FBUyxFQUFFLFNBQVM7d0JBQ3BCLGdCQUFnQixFQUFFLGlDQUFpQzt3QkFDbkQsZUFBZSxFQUFFLG9CQUFvQjt3QkFDckMsK0JBQStCLEVBQUUsd0JBQXdCO3dCQUN6RCxnQkFBZ0IsRUFBRSxLQUFLO3FCQUMxQjtpQkFDSjs4QkFLVSxZQUFZO3NCQURsQixLQUFLO2dCQUlDLE1BQU07c0JBRFosS0FBSztnQkFJQyxNQUFNO3NCQURaLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7T25DaGFuZ2VzfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7RGlyZWN0aXZlLCBpbmplY3QsIElucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7TWFza2l0b0RpcmVjdGl2ZX0gZnJvbSAnQG1hc2tpdG8vYW5ndWxhcic7XG5pbXBvcnQge1RVSV9JTlBVVF9DQVJEX09QVElPTlN9IGZyb20gJ0B0YWlnYS11aS9hZGRvbi1jb21tZXJjZS9jb21wb25lbnRzL2lucHV0LWNhcmQnO1xuaW1wb3J0IHtUVUlfTUFTS19DVkN9IGZyb20gJ0B0YWlnYS11aS9hZGRvbi1jb21tZXJjZS9jb25zdGFudHMnO1xuaW1wb3J0IHtUdWlXaXRoVGV4dGZpZWxkfSBmcm9tICdAdGFpZ2EtdWkvY29yZS9jb21wb25lbnRzL3RleHRmaWVsZCc7XG5pbXBvcnQge3R1aU1hc2tpdG99IGZyb20gJ0B0YWlnYS11aS9raXQvdXRpbHMnO1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzdGFuZGFsb25lOiB0cnVlLFxuICAgIHNlbGVjdG9yOiAnaW5wdXRbdHVpSW5wdXRDVkNdJyxcbiAgICBob3N0RGlyZWN0aXZlczogW01hc2tpdG9EaXJlY3RpdmUsIFR1aVdpdGhUZXh0ZmllbGRdLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgaW5wdXRtb2RlOiAnbnVtZXJpYycsXG4gICAgICAgICdbYXV0b2NvbXBsZXRlXSc6ICdhdXRvY29tcGxldGUgPyBcImNjLWNzY1wiIDogXCJvZmZcIicsXG4gICAgICAgICdbcGxhY2Vob2xkZXJdJzogJ1wiMFwiLnJlcGVhdChsZW5ndGgpJyxcbiAgICAgICAgJ1tzdHlsZS4td2Via2l0LXRleHQtc2VjdXJpdHldJzogJ2hpZGRlbiA/IFwiZGlzY1wiIDogbnVsbCcsXG4gICAgICAgICcoY29weS5wcmV2ZW50KSc6ICcoMCknLFxuICAgIH0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aUlucHV0Q1ZDIGltcGxlbWVudHMgT25DaGFuZ2VzIHtcbiAgICBwcml2YXRlIHJlYWRvbmx5IG1hc2sgPSB0dWlNYXNraXRvKFRVSV9NQVNLX0NWQygzKSk7XG5cbiAgICBASW5wdXQoKVxuICAgIHB1YmxpYyBhdXRvY29tcGxldGUgPSBpbmplY3QoVFVJX0lOUFVUX0NBUkRfT1BUSU9OUykuYXV0b2NvbXBsZXRlO1xuXG4gICAgQElucHV0KClcbiAgICBwdWJsaWMgaGlkZGVuID0gdHJ1ZTtcblxuICAgIEBJbnB1dCgpXG4gICAgcHVibGljIGxlbmd0aDogMyB8IDQgPSAzO1xuXG4gICAgLy8gVE9ETzogcmVmYWN0b3IgdG8gc2lnbmFsIGlucHV0cyBhZnRlciBBbmd1bGFyIHVwZGF0ZVxuICAgIHB1YmxpYyBuZ09uQ2hhbmdlcygpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5tYXNrLnNldChUVUlfTUFTS19DVkModGhpcy5sZW5ndGgpKTtcbiAgICB9XG59XG4iXX0=