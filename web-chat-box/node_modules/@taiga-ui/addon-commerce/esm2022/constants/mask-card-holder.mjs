const MAP = {
    А: 'F',
    В: 'D',
    Г: 'U',
    Д: 'L',
    Е: 'T',
    З: 'P',
    И: 'B',
    Й: 'Q',
    К: 'R',
    Л: 'K',
    М: 'V',
    Н: 'Y',
    О: 'J',
    П: 'G',
    Р: 'H',
    С: 'C',
    Т: 'N',
    У: 'E',
    Ф: 'A',
    Ц: 'W',
    Ч: 'X',
    Ш: 'I',
    Щ: 'O',
    Ы: 'S',
    Ь: 'M',
    Я: 'Z',
};
function toEnglishUppercase(value) {
    return value
        .toUpperCase()
        .split('')
        .map((char) => MAP[char] || char)
        .join('');
}
export const TUI_MASK_CARD_HOLDER = {
    mask: /^[a-z\s]+$/i,
    preprocessors: [
        ({ elementState, data }) => {
            const { value, selection } = elementState;
            return {
                elementState: {
                    selection,
                    value: toEnglishUppercase(value),
                },
                data: toEnglishUppercase(data),
            };
        },
    ],
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFzay1jYXJkLWhvbGRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2FkZG9uLWNvbW1lcmNlL2NvbnN0YW50cy9tYXNrLWNhcmQtaG9sZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE1BQU0sR0FBRyxHQUEyQjtJQUNoQyxDQUFDLEVBQUUsR0FBRztJQUNOLENBQUMsRUFBRSxHQUFHO0lBQ04sQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLENBQUMsRUFBRSxHQUFHO0lBQ04sQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLENBQUMsRUFBRSxHQUFHO0lBQ04sQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLENBQUMsRUFBRSxHQUFHO0lBQ04sQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLENBQUMsRUFBRSxHQUFHO0lBQ04sQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLENBQUMsRUFBRSxHQUFHO0lBQ04sQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLENBQUMsRUFBRSxHQUFHO0lBQ04sQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLENBQUMsRUFBRSxHQUFHO0lBQ04sQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLENBQUMsRUFBRSxHQUFHO0NBQ1QsQ0FBQztBQUVGLFNBQVMsa0JBQWtCLENBQUMsS0FBYTtJQUNyQyxPQUFPLEtBQUs7U0FDUCxXQUFXLEVBQUU7U0FDYixLQUFLLENBQUMsRUFBRSxDQUFDO1NBQ1QsR0FBRyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDO1NBQ2hDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUNsQixDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sb0JBQW9CLEdBQW1CO0lBQ2hELElBQUksRUFBRSxhQUFhO0lBQ25CLGFBQWEsRUFBRTtRQUNYLENBQUMsRUFBQyxZQUFZLEVBQUUsSUFBSSxFQUFDLEVBQUUsRUFBRTtZQUNyQixNQUFNLEVBQUMsS0FBSyxFQUFFLFNBQVMsRUFBQyxHQUFHLFlBQVksQ0FBQztZQUV4QyxPQUFPO2dCQUNILFlBQVksRUFBRTtvQkFDVixTQUFTO29CQUNULEtBQUssRUFBRSxrQkFBa0IsQ0FBQyxLQUFLLENBQUM7aUJBQ25DO2dCQUNELElBQUksRUFBRSxrQkFBa0IsQ0FBQyxJQUFJLENBQUM7YUFDakMsQ0FBQztRQUNOLENBQUM7S0FDSjtDQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7TWFza2l0b09wdGlvbnN9IGZyb20gJ0BtYXNraXRvL2NvcmUnO1xuXG5jb25zdCBNQVA6IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gPSB7XG4gICAg0JA6ICdGJyxcbiAgICDQkjogJ0QnLFxuICAgINCTOiAnVScsXG4gICAg0JQ6ICdMJyxcbiAgICDQlTogJ1QnLFxuICAgINCXOiAnUCcsXG4gICAg0Jg6ICdCJyxcbiAgICDQmTogJ1EnLFxuICAgINCaOiAnUicsXG4gICAg0Js6ICdLJyxcbiAgICDQnDogJ1YnLFxuICAgINCdOiAnWScsXG4gICAg0J46ICdKJyxcbiAgICDQnzogJ0cnLFxuICAgINCgOiAnSCcsXG4gICAg0KE6ICdDJyxcbiAgICDQojogJ04nLFxuICAgINCjOiAnRScsXG4gICAg0KQ6ICdBJyxcbiAgICDQpjogJ1cnLFxuICAgINCnOiAnWCcsXG4gICAg0Kg6ICdJJyxcbiAgICDQqTogJ08nLFxuICAgINCrOiAnUycsXG4gICAg0Kw6ICdNJyxcbiAgICDQrzogJ1onLFxufTtcblxuZnVuY3Rpb24gdG9FbmdsaXNoVXBwZXJjYXNlKHZhbHVlOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIHJldHVybiB2YWx1ZVxuICAgICAgICAudG9VcHBlckNhc2UoKVxuICAgICAgICAuc3BsaXQoJycpXG4gICAgICAgIC5tYXAoKGNoYXIpID0+IE1BUFtjaGFyXSB8fCBjaGFyKVxuICAgICAgICAuam9pbignJyk7XG59XG5cbmV4cG9ydCBjb25zdCBUVUlfTUFTS19DQVJEX0hPTERFUjogTWFza2l0b09wdGlvbnMgPSB7XG4gICAgbWFzazogL15bYS16XFxzXSskL2ksXG4gICAgcHJlcHJvY2Vzc29yczogW1xuICAgICAgICAoe2VsZW1lbnRTdGF0ZSwgZGF0YX0pID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHt2YWx1ZSwgc2VsZWN0aW9ufSA9IGVsZW1lbnRTdGF0ZTtcblxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBlbGVtZW50U3RhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0aW9uLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdG9FbmdsaXNoVXBwZXJjYXNlKHZhbHVlKSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGRhdGE6IHRvRW5nbGlzaFVwcGVyY2FzZShkYXRhKSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0sXG4gICAgXSxcbn07XG4iXX0=