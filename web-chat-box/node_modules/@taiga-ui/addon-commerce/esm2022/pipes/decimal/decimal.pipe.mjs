import { inject, INJECTOR, Injector, Pipe } from '@angular/core';
import { TuiAmountPipe } from '@taiga-ui/addon-commerce/pipes/amount';
import { TUI_NUMBER_FORMAT } from '@taiga-ui/core/tokens';
import { map, switchMap } from 'rxjs';
import * as i0 from "@angular/core";
class TuiDecimalPipe {
    constructor() {
        this.format = inject(TUI_NUMBER_FORMAT);
        this.amountPipe = Injector.create({
            providers: [{ provide: TuiAmountPipe }],
            parent: inject(INJECTOR),
        }).get(TuiAmountPipe);
    }
    transform(value, currency = '') {
        return this.format.pipe(switchMap((format) => this.amountPipe.transform(value, currency).pipe(map((value) => {
            const decimal = value.split(format.decimalSeparator)[1];
            return decimal ? `${format.decimalSeparator}${decimal}` : '';
        }))));
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiDecimalPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe }); }
    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: TuiDecimalPipe, isStandalone: true, name: "tuiDecimal" }); }
}
export { TuiDecimalPipe };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiDecimalPipe, decorators: [{
            type: Pipe,
            args: [{ standalone: true, name: 'tuiDecimal' }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVjaW1hbC5waXBlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYWRkb24tY29tbWVyY2UvcGlwZXMvZGVjaW1hbC9kZWNpbWFsLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFDLE1BQU0sRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUMvRCxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sdUNBQXVDLENBQUM7QUFFcEUsT0FBTyxFQUFDLGlCQUFpQixFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFFeEQsT0FBTyxFQUFDLEdBQUcsRUFBRSxTQUFTLEVBQUMsTUFBTSxNQUFNLENBQUM7O0FBRXBDLE1BQ2EsY0FBYztJQUQzQjtRQUVxQixXQUFNLEdBQUcsTUFBTSxDQUFDLGlCQUFpQixDQUFDLENBQUM7UUFDbkMsZUFBVSxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUM7WUFDMUMsU0FBUyxFQUFFLENBQUMsRUFBQyxPQUFPLEVBQUUsYUFBYSxFQUFDLENBQUM7WUFDckMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxRQUFRLENBQUM7U0FDM0IsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsQ0FBQztLQWtCekI7SUFoQlUsU0FBUyxDQUNaLEtBQWEsRUFDYixXQUFnQyxFQUFFO1FBRWxDLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQ25CLFNBQVMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQ2pCLElBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsQ0FBQyxJQUFJLENBQzNDLEdBQUcsQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFO1lBQ1YsTUFBTSxPQUFPLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUV4RCxPQUFPLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUMsZ0JBQWdCLEdBQUcsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUNqRSxDQUFDLENBQUMsQ0FDTCxDQUNKLENBQ0osQ0FBQztJQUNOLENBQUM7K0dBdEJRLGNBQWM7NkdBQWQsY0FBYzs7U0FBZCxjQUFjOzRGQUFkLGNBQWM7a0JBRDFCLElBQUk7bUJBQUMsRUFBQyxVQUFVLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxZQUFZLEVBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7UGlwZVRyYW5zZm9ybX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge2luamVjdCwgSU5KRUNUT1IsIEluamVjdG9yLCBQaXBlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VHVpQW1vdW50UGlwZX0gZnJvbSAnQHRhaWdhLXVpL2FkZG9uLWNvbW1lcmNlL3BpcGVzL2Ftb3VudCc7XG5pbXBvcnQgdHlwZSB7VHVpQ3VycmVuY3lWYXJpYW50c30gZnJvbSAnQHRhaWdhLXVpL2FkZG9uLWNvbW1lcmNlL3R5cGVzJztcbmltcG9ydCB7VFVJX05VTUJFUl9GT1JNQVR9IGZyb20gJ0B0YWlnYS11aS9jb3JlL3Rva2Vucyc7XG5pbXBvcnQgdHlwZSB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XG5pbXBvcnQge21hcCwgc3dpdGNoTWFwfSBmcm9tICdyeGpzJztcblxuQFBpcGUoe3N0YW5kYWxvbmU6IHRydWUsIG5hbWU6ICd0dWlEZWNpbWFsJ30pXG5leHBvcnQgY2xhc3MgVHVpRGVjaW1hbFBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgICBwcml2YXRlIHJlYWRvbmx5IGZvcm1hdCA9IGluamVjdChUVUlfTlVNQkVSX0ZPUk1BVCk7XG4gICAgcHJpdmF0ZSByZWFkb25seSBhbW91bnRQaXBlID0gSW5qZWN0b3IuY3JlYXRlKHtcbiAgICAgICAgcHJvdmlkZXJzOiBbe3Byb3ZpZGU6IFR1aUFtb3VudFBpcGV9XSxcbiAgICAgICAgcGFyZW50OiBpbmplY3QoSU5KRUNUT1IpLFxuICAgIH0pLmdldChUdWlBbW91bnRQaXBlKTtcblxuICAgIHB1YmxpYyB0cmFuc2Zvcm0oXG4gICAgICAgIHZhbHVlOiBudW1iZXIsXG4gICAgICAgIGN1cnJlbmN5OiBUdWlDdXJyZW5jeVZhcmlhbnRzID0gJycsXG4gICAgKTogT2JzZXJ2YWJsZTxzdHJpbmc+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZm9ybWF0LnBpcGUoXG4gICAgICAgICAgICBzd2l0Y2hNYXAoKGZvcm1hdCkgPT5cbiAgICAgICAgICAgICAgICB0aGlzLmFtb3VudFBpcGUudHJhbnNmb3JtKHZhbHVlLCBjdXJyZW5jeSkucGlwZShcbiAgICAgICAgICAgICAgICAgICAgbWFwKCh2YWx1ZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZGVjaW1hbCA9IHZhbHVlLnNwbGl0KGZvcm1hdC5kZWNpbWFsU2VwYXJhdG9yKVsxXTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRlY2ltYWwgPyBgJHtmb3JtYXQuZGVjaW1hbFNlcGFyYXRvcn0ke2RlY2ltYWx9YCA6ICcnO1xuICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgKSxcbiAgICAgICAgKTtcbiAgICB9XG59XG4iXX0=