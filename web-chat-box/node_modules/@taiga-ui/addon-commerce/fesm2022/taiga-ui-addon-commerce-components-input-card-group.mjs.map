{"version":3,"file":"taiga-ui-addon-commerce-components-input-card-group.mjs","sources":["../../../projects/addon-commerce/components/input-card-group/input-card-group.options.ts","../../../projects/addon-commerce/components/input-card-group/input-card-group.providers.ts","../../../projects/addon-commerce/components/input-card-group/input-card-group.component.ts","../../../projects/addon-commerce/components/input-card-group/input-card-group.template.html","../../../projects/addon-commerce/components/input-card-group/taiga-ui-addon-commerce-components-input-card-group.ts"],"sourcesContent":["import type {Provider} from '@angular/core';\nimport type {TuiInputCardOptions} from '@taiga-ui/addon-commerce/components/input-card';\nimport {TUI_INPUT_CARD_DEFAULT_OPTIONS} from '@taiga-ui/addon-commerce/components/input-card';\nimport {tuiDefaultCardValidator} from '@taiga-ui/addon-commerce/constants';\nimport type {TuiBooleanHandler} from '@taiga-ui/cdk/types';\nimport {tuiCreateToken, tuiProvideOptions} from '@taiga-ui/cdk/utils/miscellaneous';\n\nexport interface TuiCardInputs {\n    cvc: boolean;\n    expire: boolean;\n}\n\nexport interface TuiInputCardGroupOptions extends TuiInputCardOptions {\n    readonly cardValidator: TuiBooleanHandler<string>;\n    readonly exampleText: string;\n    readonly exampleTextCVC: string;\n    readonly cvcHidden: boolean;\n    readonly inputs: TuiCardInputs;\n}\n\nexport const TUI_INPUT_CARD_GROUP_DEFAULT_OPTIONS: TuiInputCardGroupOptions = {\n    ...TUI_INPUT_CARD_DEFAULT_OPTIONS,\n    cardValidator: tuiDefaultCardValidator,\n    exampleText: '0000 0000 0000 0000',\n    exampleTextCVC: '000',\n    cvcHidden: true,\n    inputs: {cvc: true, expire: true},\n};\n\nexport const TUI_INPUT_CARD_GROUP_OPTIONS = tuiCreateToken(\n    TUI_INPUT_CARD_GROUP_DEFAULT_OPTIONS,\n);\n\nexport function tuiInputCardGroupOptionsProvider(\n    options: Partial<TuiInputCardGroupOptions>,\n): Provider {\n    return tuiProvideOptions(\n        TUI_INPUT_CARD_GROUP_OPTIONS,\n        options,\n        TUI_INPUT_CARD_GROUP_DEFAULT_OPTIONS,\n    );\n}\n","import {inject} from '@angular/core';\nimport {WA_WINDOW} from '@ng-web-apis/common';\nimport {\n    TUI_CARD_CVC_TEXTS,\n    TUI_CARD_EXPIRY_TEXTS,\n    TUI_CARD_NUMBER_TEXTS,\n} from '@taiga-ui/addon-commerce/tokens';\nimport {tuiTypedFromEvent} from '@taiga-ui/cdk/observables';\nimport {tuiCreateTokenFromFactory} from '@taiga-ui/cdk/utils/miscellaneous';\nimport {TUI_MEDIA} from '@taiga-ui/core/tokens';\nimport type {Observable} from 'rxjs';\nimport {combineLatest, map, of, startWith, switchMap} from 'rxjs';\n\nexport interface TuiCardGroupedTexts {\n    readonly cardNumberText: string;\n    readonly cvcText: string;\n    readonly expiryText: string;\n}\n\n/**\n * InputCardGroup texts\n */\nexport const TUI_INPUT_CARD_GROUP_TEXTS = tuiCreateTokenFromFactory<\n    Observable<TuiCardGroupedTexts>\n>(() => {\n    const win = inject(WA_WINDOW);\n    const cardNumberTexts = inject(TUI_CARD_NUMBER_TEXTS);\n    const expiryTexts = inject(TUI_CARD_EXPIRY_TEXTS);\n    const cvcTexts = inject(TUI_CARD_CVC_TEXTS);\n    const {desktopSmall} = inject(TUI_MEDIA);\n\n    const media = win.matchMedia(`screen and (min-width: ${(desktopSmall - 1) / 16}em)`);\n\n    return tuiTypedFromEvent(media, 'change').pipe(\n        startWith(null),\n        switchMap(() =>\n            combineLatest([\n                of(Number(media.matches)),\n                cardNumberTexts,\n                expiryTexts,\n                cvcTexts,\n            ]),\n        ),\n        map(([index, cardNumber, expiry, cvcTexts]) => ({\n            cardNumberText: cardNumber[index] ?? '',\n            expiryText: expiry[index] ?? '',\n            cvcText: cvcTexts[index] ?? '',\n        })),\n    );\n});\n","import {NgIf} from '@angular/common';\nimport type {ElementRef, Signal} from '@angular/core';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    computed,\n    EventEmitter,\n    inject,\n    Input,\n    Output,\n    ViewChild,\n} from '@angular/core';\nimport {takeUntilDestroyed, toSignal} from '@angular/core/rxjs-interop';\nimport {FormsModule} from '@angular/forms';\nimport {MaskitoDirective} from '@maskito/angular';\nimport {WaResizeObserver} from '@ng-web-apis/resize-observer';\nimport {\n    TUI_MASK_CARD,\n    TUI_MASK_CVC,\n    TUI_MASK_EXPIRE,\n} from '@taiga-ui/addon-commerce/constants';\nimport {TuiFormatCardPipe} from '@taiga-ui/addon-commerce/pipes';\nimport {TUI_PAYMENT_SYSTEM_ICONS} from '@taiga-ui/addon-commerce/tokens';\nimport type {TuiPaymentSystem} from '@taiga-ui/addon-commerce/types';\nimport {tuiAsControl, TuiControl} from '@taiga-ui/cdk/classes';\nimport {TUI_NON_DIGIT_REGEXP} from '@taiga-ui/cdk/constants';\nimport {TuiActiveZone} from '@taiga-ui/cdk/directives/active-zone';\nimport {tuiHovered, TuiHoveredService} from '@taiga-ui/cdk/directives/hovered';\nimport {TuiLet} from '@taiga-ui/cdk/directives/let';\nimport {tuiTypedFromEvent} from '@taiga-ui/cdk/observables';\nimport {TuiMapperPipe} from '@taiga-ui/cdk/pipes/mapper';\nimport {tuiInjectId} from '@taiga-ui/cdk/services';\nimport {TUI_IS_WEBKIT} from '@taiga-ui/cdk/tokens';\nimport type {TuiBooleanHandler} from '@taiga-ui/cdk/types';\nimport {tuiInjectElement, tuiIsElement, tuiIsInput} from '@taiga-ui/cdk/utils/dom';\nimport {tuiIsNativeFocused, tuiIsNativeFocusedIn} from '@taiga-ui/cdk/utils/focus';\nimport {tuiPure} from '@taiga-ui/cdk/utils/miscellaneous';\nimport type {TuiDataListHost} from '@taiga-ui/core/components/data-list';\nimport {tuiAsDataListHost} from '@taiga-ui/core/components/data-list';\nimport {TuiIcon, TuiIconPipe} from '@taiga-ui/core/components/icon';\nimport {\n    TUI_TEXTFIELD_OPTIONS,\n    TuiWithTextfieldDropdown,\n} from '@taiga-ui/core/components/textfield';\nimport {\n    TuiAppearance,\n    tuiAppearance,\n    tuiAppearanceFocus,\n    tuiAppearanceMode,\n    tuiAppearanceState,\n} from '@taiga-ui/core/directives/appearance';\nimport {\n    TuiDropdownDirective,\n    tuiDropdownOpen,\n    tuiDropdownOptionsProvider,\n    TuiWithDropdownOpen,\n} from '@taiga-ui/core/directives/dropdown';\nimport {TUI_COMMON_ICONS} from '@taiga-ui/core/tokens';\nimport {TuiChevron} from '@taiga-ui/kit/directives/chevron';\nimport type {PolymorpheusContent} from '@taiga-ui/polymorpheus';\nimport {PolymorpheusOutlet, PolymorpheusTemplate} from '@taiga-ui/polymorpheus';\nimport {EMPTY, map, merge, Subject, switchMap, timer} from 'rxjs';\n\nimport {TUI_INPUT_CARD_GROUP_OPTIONS} from './input-card-group.options';\nimport {TUI_INPUT_CARD_GROUP_TEXTS} from './input-card-group.providers';\n\nexport interface TuiCard {\n    card: string;\n    cvc: string;\n    expire: string;\n}\n\n@Component({\n    standalone: true,\n    selector: 'tui-input-card-group',\n    imports: [\n        FormsModule,\n        MaskitoDirective,\n        NgIf,\n        PolymorpheusOutlet,\n        PolymorpheusTemplate,\n        TuiActiveZone,\n        TuiAppearance,\n        TuiChevron,\n        TuiFormatCardPipe,\n        TuiIcon,\n        TuiIconPipe,\n        TuiLet,\n        TuiMapperPipe,\n        WaResizeObserver,\n    ],\n    templateUrl: './input-card-group.template.html',\n    styleUrls: ['./input-card-group.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        tuiAsDataListHost(TuiInputCardGroup),\n        tuiAsControl(TuiInputCardGroup),\n        tuiDropdownOptionsProvider({limitWidth: 'fixed'}),\n        TuiHoveredService,\n    ],\n    hostDirectives: [\n        TuiAppearance,\n        TuiDropdownDirective,\n        TuiWithTextfieldDropdown,\n        TuiWithDropdownOpen,\n    ],\n    host: {\n        'data-size': 'l',\n        '(mousedown)': 'onMouseDown($event)',\n        '(scroll.zoneless)': '$event.target.scrollLeft = 0',\n    },\n})\nexport class TuiInputCardGroup\n    extends TuiControl<TuiCard | null>\n    implements TuiDataListHost<Partial<TuiCard>>\n{\n    @ViewChild('inputCard')\n    private readonly inputCard?: ElementRef<HTMLInputElement>;\n\n    @ViewChild('inputExpire')\n    private readonly inputExpire?: ElementRef<HTMLInputElement>;\n\n    @ViewChild('inputCVC')\n    private readonly inputCVC?: ElementRef<HTMLInputElement>;\n\n    private readonly focus$ = new Subject<void>();\n    private expirePrefilled = false;\n    private readonly paymentSystems = inject(TUI_PAYMENT_SYSTEM_ICONS);\n    private readonly options = inject(TUI_INPUT_CARD_GROUP_OPTIONS);\n    private readonly el = tuiInjectElement();\n    private readonly hover = tuiHovered();\n    private readonly focusedIn = toSignal(\n        merge(\n            tuiTypedFromEvent(this.el, 'focusin'),\n            tuiTypedFromEvent(this.el, 'focusout'),\n        ).pipe(map(() => tuiIsNativeFocusedIn(this.el))),\n        {initialValue: false},\n    );\n\n    protected exampleTextCVC = this.options.exampleTextCVC;\n    protected cvcHidden = this.options.cvcHidden;\n    protected maskCVC = TUI_MASK_CVC(3);\n    protected readonly dropdown = inject(TuiDropdownDirective);\n    protected readonly maskCard = TUI_MASK_CARD;\n    protected readonly maskExpire = TUI_MASK_EXPIRE;\n    protected readonly icons = inject(TUI_COMMON_ICONS);\n    protected readonly texts = toSignal(inject(TUI_INPUT_CARD_GROUP_TEXTS));\n    protected readonly open = tuiDropdownOpen();\n    protected readonly $ = inject(TUI_IS_WEBKIT)\n        ? this.focus$\n              .pipe(\n                  switchMap(() => timer(100)),\n                  takeUntilDestroyed(),\n              )\n              .subscribe(() => (this.expire ? this.focusCVC() : this.focusExpire()))\n        : EMPTY;\n\n    protected readonly m = tuiAppearanceMode(this.mode);\n    protected readonly appearance = tuiAppearance(\n        inject(TUI_TEXTFIELD_OPTIONS).appearance,\n    );\n\n    protected readonly state: Signal<unknown> = tuiAppearanceState(\n        // eslint-disable-next-line no-nested-ternary\n        computed(() => (this.disabled() ? 'disabled' : this.hover() ? 'hover' : null)),\n    );\n\n    protected readonly focus = tuiAppearanceFocus(\n        computed(() => this.open() || this.focusedIn()),\n    );\n\n    protected readonly labelRaised = computed(\n        () => (this.focus() && !this.readOnly()) || !!this.value()?.card,\n    );\n\n    protected readonly hasCleaner = computed(\n        () => !!this.value()?.card && this.interactive(),\n    );\n\n    /**\n     * @deprecated use 'placeholder' instead\n     */\n    @Input()\n    public exampleText = this.options.exampleText;\n\n    @Input()\n    public placeholder = this.options.exampleText;\n\n    @Input()\n    public inputs = this.options.inputs;\n\n    @Input()\n    public cardValidator: TuiBooleanHandler<string> = this.options.cardValidator;\n\n    @Input()\n    public icon: PolymorpheusContent = this.options.icon;\n\n    @Input()\n    public id = tuiInjectId();\n\n    @Input()\n    public autocomplete = this.options.autocomplete;\n\n    @Output()\n    public readonly binChange = new EventEmitter<string | null>();\n\n    @Input()\n    public set codeLength(length: 3 | 4) {\n        this.exampleTextCVC = '0'.repeat(length);\n        this.maskCVC = TUI_MASK_CVC(length);\n    }\n\n    public get bin(): string | null {\n        return this.card.length < 6 ? null : this.card.slice(0, 6);\n    }\n\n    public override writeValue(value: TuiCard | null): void {\n        const {bin} = this;\n\n        super.writeValue(value);\n        this.updateBin(bin);\n        this.expirePrefilled = !!this.expire && this.cardPrefilled;\n    }\n\n    /** Public API for manual focus management */\n    public focusCard(): void {\n        this.inputCard?.nativeElement.focus({preventScroll: true});\n    }\n\n    public focusExpire(): void {\n        if (this.inputs.expire) {\n            this.inputExpire?.nativeElement.focus({preventScroll: true});\n        } else {\n            this.inputCVC?.nativeElement.focus({preventScroll: true});\n        }\n    }\n\n    public focusCVC(): void {\n        this.inputCVC?.nativeElement.focus({preventScroll: true});\n    }\n\n    public handleOption(option: Partial<TuiCard> | null): void {\n        const {card = '', expire = '', cvc = ''} = option || {};\n        const {bin} = this;\n        const element =\n            (!card && this.inputCard?.nativeElement) ||\n            (!expire && this.inputExpire?.nativeElement) ||\n            this.inputCVC?.nativeElement;\n\n        this.onChange({card, expire, cvc});\n        this.updateBin(bin);\n        this.open.set(false);\n        this.expirePrefilled = !!expire;\n\n        element?.focus();\n    }\n\n    public clear(): void {\n        this.expirePrefilled = false;\n\n        [this.inputCVC, this.inputExpire, this.inputCard].forEach((e) => {\n            e?.nativeElement.focus();\n            e?.nativeElement.select();\n            e?.nativeElement.ownerDocument.execCommand('delete');\n        });\n\n        this.onChange(null);\n    }\n\n    public onResize(): void {\n        this.cdr.detectChanges();\n    }\n\n    protected get content(): PolymorpheusContent {\n        const system = this.getPaymentSystem(this.card);\n\n        return this.icon || (system && this.paymentSystems[system]);\n    }\n\n    protected get card(): string {\n        return this.value()?.card || '';\n    }\n\n    protected get expire(): string {\n        return this.value()?.expire || '';\n    }\n\n    protected get cvc(): string {\n        return this.value()?.cvc || '';\n    }\n\n    protected get cardCollapsed(): boolean {\n        return (\n            this.isFocusable(this.card) &&\n            !tuiIsNativeFocused(this.inputCard?.nativeElement)\n        );\n    }\n\n    protected get tailLength(): number {\n        return this.card.length % 4 > 0 ? 5 : 4;\n    }\n\n    protected get cardPrefilled(): boolean {\n        return !!this.card.match(TUI_NON_DIGIT_REGEXP);\n    }\n\n    protected get cvcPrefilled(): boolean {\n        return !this.inputs.cvc || !!this.cvc.match(TUI_NON_DIGIT_REGEXP);\n    }\n\n    protected get cardFocusable(): boolean {\n        return !this.cardPrefilled;\n    }\n\n    protected get expireFocusable(): boolean {\n        return this.isFocusable(this.card) && !this.expirePrefilled;\n    }\n\n    protected get cvcFocusable(): boolean {\n        return this.isFocusable(this.card);\n    }\n\n    protected get masked(): string {\n        return this.cardPrefilled ? `*${this.card.slice(-4)}` : '*';\n    }\n\n    protected onCardChange(card: string): void {\n        const {value, bin} = this;\n        const parsed = card.split(' ').join('');\n\n        if (value()?.card === parsed) {\n            return;\n        }\n\n        this.updateProperty(parsed, 'card');\n        this.updateBin(bin);\n\n        if (this.cardValidator(this.card) && !value()?.expire && this.inputExpire) {\n            this.focusExpire();\n            // Safari autofill focus jerk workaround\n            this.focus$.next();\n        }\n    }\n\n    protected onExpireChange(expire: string): void {\n        this.updateProperty(expire, 'expire');\n\n        if (\n            Number(this.inputExpire?.nativeElement.selectionStart) === 5 // MM/YY\n        ) {\n            this.focusCVC();\n        }\n    }\n\n    protected onCVCChange(cvc: string): void {\n        this.updateProperty(cvc, 'cvc');\n    }\n\n    protected transform({offsetWidth}: HTMLSpanElement): string {\n        return this.cardCollapsed ? `translate3d(${offsetWidth}px, 0, 0)` : '';\n    }\n\n    protected onMouseDown(event: MouseEvent): void {\n        if (tuiIsElement(event.target) && tuiIsInput(event.target)) {\n            return;\n        }\n\n        event.preventDefault();\n        this.focusInput();\n    }\n\n    protected toggle(): void {\n        this.open.set(!this.open());\n    }\n\n    @tuiPure\n    private isFocusable(card: string): boolean {\n        return this.cardValidator(card) || this.cardPrefilled;\n    }\n\n    @tuiPure\n    private getPaymentSystem(value: string): TuiPaymentSystem | null {\n        return this.options.paymentSystemHandler(value);\n    }\n\n    private updateBin(oldBin: string | null): void {\n        const {bin} = this;\n\n        if (bin !== oldBin && !this.cardPrefilled) {\n            this.binChange.emit(bin);\n        }\n    }\n\n    private updateProperty(value: string, propName: 'card' | 'cvc' | 'expire'): void {\n        const {card = '', expire = '', cvc = ''} = this.value() || {};\n        const newValue: TuiCard = {card, expire, cvc};\n\n        newValue[propName] = value;\n\n        this.onChange(newValue.expire || newValue.cvc || newValue.card ? newValue : null);\n    }\n\n    private focusInput(): void {\n        const element =\n            (this.cardFocusable && this.inputCard?.nativeElement) ||\n            (this.expireFocusable && this.inputExpire?.nativeElement) ||\n            this.inputCVC?.nativeElement;\n\n        element?.focus();\n    }\n}\n","<div class=\"t-wrapper\">\n    <label\n        *tuiLet=\"value()?.card | tuiFormatCard: cardPrefilled as formattedCard\"\n        (click.zoneless.prevent)=\"(0)\"\n    >\n        <input\n            #inputCard\n            automation-id=\"tui-input-card-group__card\"\n            inputmode=\"numeric\"\n            translate=\"no\"\n            type=\"text\"\n            class=\"t-input t-input_card\"\n            [attr.aria-invalid]=\"!cardPrefilled && !(this.card | tuiMapper: cardValidator)\"\n            [attr.id]=\"id + '_card'\"\n            [autocomplete]=\"autocomplete ? 'cc-number' : 'off'\"\n            [class.t-input_filled]=\"card.length\"\n            [class.t-input_inert]=\"cardPrefilled\"\n            [disabled]=\"disabled()\"\n            [maskito]=\"maskCard\"\n            [ngModel]=\"formattedCard\"\n            [ngModelOptions]=\"{standalone: true}\"\n            [placeholder]=\"cardPrefilled ? '' : placeholder || exampleText\"\n            [readOnly]=\"readOnly()\"\n            [tabIndex]=\"cardFocusable ? 0 : -1\"\n            (focus)=\"(0)\"\n            (ngModelChange)=\"onCardChange($event)\"\n        />\n        <span\n            aria-hidden=\"true\"\n            translate=\"no\"\n            class=\"t-collapsed\"\n            [attr.data-before]=\"masked\"\n            [class.t-collapsed_enable-mask]=\"cardCollapsed\"\n            (waResizeObserver)=\"onResize()\"\n        >\n            <span\n                #ghost\n                class=\"t-ghost\"\n                [textContent]=\"formattedCard.slice(-tailLength)\"\n            ></span>\n\n            <span class=\"t-collapsed-wrapper\">\n                <span\n                    class=\"t-value\"\n                    [style.transform]=\"transform(ghost)\"\n                >\n                    {{ formattedCard }}\n                </span>\n            </span>\n        </span>\n        <div\n            class=\"t-label\"\n            [class.t-label_raised]=\"labelRaised()\"\n        >\n            {{ texts()?.cardNumberText }}\n        </div>\n    </label>\n</div>\n<div\n    class=\"t-wrapper t-wrapper_expire\"\n    [class.t-wrapper_active]=\"cardCollapsed\"\n>\n    <label (click.zoneless.prevent)=\"(0)\">\n        <input\n            #inputExpire\n            automation-id=\"tui-input-card-group__expire\"\n            inputmode=\"numeric\"\n            maxlength=\"5\"\n            translate=\"no\"\n            class=\"t-input\"\n            [attr.id]=\"id + '_expire'\"\n            [attr.name]=\"autocomplete ? 'ccexpiryyear' : null\"\n            [autocomplete]=\"autocomplete ? 'cc-exp' : 'off'\"\n            [class.t-input_inert]=\"!expireFocusable\"\n            [class.t-input_prefilled]=\"!inputs.expire\"\n            [disabled]=\"disabled()\"\n            [maskito]=\"maskExpire\"\n            [ngModel]=\"expire\"\n            [ngModelOptions]=\"{standalone: true}\"\n            [placeholder]=\"inputs.expire ? '00/00' : '••/••'\"\n            [readOnly]=\"readOnly() || !inputs.expire\"\n            [tabIndex]=\"expireFocusable ? 0 : -1\"\n            (focus)=\"(0)\"\n            (ngModelChange)=\"onExpireChange($event)\"\n        />\n        <div\n            class=\"t-label\"\n            [class.t-label_raised]=\"labelRaised()\"\n        >\n            {{ texts()?.expiryText }}\n        </div>\n    </label>\n</div>\n<div\n    class=\"t-wrapper t-wrapper_cvc\"\n    [class.t-wrapper_active]=\"cardCollapsed\"\n>\n    <label (click.zoneless.prevent)=\"(0)\">\n        <input\n            #inputCVC\n            automation-id=\"tui-input-card-group__cvc\"\n            inputmode=\"numeric\"\n            translate=\"no\"\n            type=\"text\"\n            class=\"t-input\"\n            [attr.id]=\"id + '_cvc'\"\n            [autocomplete]=\"autocomplete ? 'cc-csc' : 'off'\"\n            [class.t-input_cvc_hidden]=\"cvcHidden\"\n            [class.t-input_prefilled]=\"cvcPrefilled\"\n            [disabled]=\"disabled()\"\n            [maskito]=\"maskCVC\"\n            [ngModel]=\"cvc\"\n            [ngModelOptions]=\"{standalone: true}\"\n            [placeholder]=\"cvcPrefilled ? '•••' : exampleTextCVC\"\n            [readOnly]=\"readOnly() || cvcPrefilled\"\n            [tabIndex]=\"cvcFocusable ? 0 : -1\"\n            (focus)=\"(0)\"\n            (ngModelChange)=\"onCVCChange($event)\"\n        />\n        <div\n            class=\"t-label\"\n            [class.t-label_raised]=\"labelRaised()\"\n        >\n            {{ texts()?.cvcText }}\n        </div>\n    </label>\n</div>\n<div class=\"t-icons\">\n    <div\n        *ngIf=\"content\"\n        class=\"t-icon-outlet\"\n    >\n        <img\n            *polymorpheusOutlet=\"content as src\"\n            alt=\"\"\n            automation-id=\"tui-input-card-group__icon\"\n            class=\"t-card\"\n            [src]=\"src | tuiIcon\"\n        />\n    </div>\n    <tui-icon\n        *ngIf=\"hasCleaner()\"\n        automation-id=\"tui-input-card-group__cleaner\"\n        tuiAppearance=\"icon\"\n        class=\"t-icon\"\n        [icon]=\"icons.close\"\n        (click)=\"clear()\"\n    />\n    <tui-icon\n        *ngIf=\"dropdown.content\"\n        automation-id=\"tui-input-card-group__dropdown\"\n        tuiAppearance=\"icon\"\n        tuiChevron\n        (click)=\"toggle()\"\n    />\n</div>\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}