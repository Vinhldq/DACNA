{"version":3,"file":"taiga-ui-addon-commerce-constants.mjs","sources":["../../../projects/addon-commerce/constants/default-card-validator.ts","../../../projects/addon-commerce/constants/mask-card.ts","../../../projects/addon-commerce/constants/mask-card-holder.ts","../../../projects/addon-commerce/constants/mask-cvc.ts","../../../projects/addon-commerce/constants/mask-expire.ts","../../../projects/addon-commerce/constants/taiga-ui-addon-commerce-constants.ts"],"sourcesContent":["import {tuiIsCardLengthValid, tuiIsCardNumberValid} from '@taiga-ui/addon-commerce/utils';\nimport type {TuiBooleanHandler} from '@taiga-ui/cdk/types';\n\nexport const tuiDefaultCardValidator: TuiBooleanHandler<string> = (card) =>\n    card.length > 11 && tuiIsCardLengthValid(card) && tuiIsCardNumberValid(card);\n","import type {MaskitoOptions} from '@maskito/core';\nimport {TUI_DIGIT_REGEXP} from '@taiga-ui/cdk/constants';\n\nexport const TUI_MASK_CARD: MaskitoOptions = {\n    mask: [\n        TUI_DIGIT_REGEXP,\n        TUI_DIGIT_REGEXP,\n        TUI_DIGIT_REGEXP,\n        TUI_DIGIT_REGEXP,\n        ' ',\n        TUI_DIGIT_REGEXP,\n        TUI_DIGIT_REGEXP,\n        TUI_DIGIT_REGEXP,\n        TUI_DIGIT_REGEXP,\n        ' ',\n        TUI_DIGIT_REGEXP,\n        TUI_DIGIT_REGEXP,\n        TUI_DIGIT_REGEXP,\n        TUI_DIGIT_REGEXP,\n        ' ',\n        TUI_DIGIT_REGEXP,\n        TUI_DIGIT_REGEXP,\n        TUI_DIGIT_REGEXP,\n        TUI_DIGIT_REGEXP,\n        ' ',\n        TUI_DIGIT_REGEXP,\n        TUI_DIGIT_REGEXP,\n        TUI_DIGIT_REGEXP,\n    ],\n};\n","import type {MaskitoOptions} from '@maskito/core';\n\nconst MAP: Record<string, string> = {\n    А: 'F',\n    В: 'D',\n    Г: 'U',\n    Д: 'L',\n    Е: 'T',\n    З: 'P',\n    И: 'B',\n    Й: 'Q',\n    К: 'R',\n    Л: 'K',\n    М: 'V',\n    Н: 'Y',\n    О: 'J',\n    П: 'G',\n    Р: 'H',\n    С: 'C',\n    Т: 'N',\n    У: 'E',\n    Ф: 'A',\n    Ц: 'W',\n    Ч: 'X',\n    Ш: 'I',\n    Щ: 'O',\n    Ы: 'S',\n    Ь: 'M',\n    Я: 'Z',\n};\n\nfunction toEnglishUppercase(value: string): string {\n    return value\n        .toUpperCase()\n        .split('')\n        .map((char) => MAP[char] || char)\n        .join('');\n}\n\nexport const TUI_MASK_CARD_HOLDER: MaskitoOptions = {\n    mask: /^[a-z\\s]+$/i,\n    preprocessors: [\n        ({elementState, data}) => {\n            const {value, selection} = elementState;\n\n            return {\n                elementState: {\n                    selection,\n                    value: toEnglishUppercase(value),\n                },\n                data: toEnglishUppercase(data),\n            };\n        },\n    ],\n};\n","import type {MaskitoOptions} from '@maskito/core';\nimport {TUI_DIGIT_REGEXP} from '@taiga-ui/cdk/constants';\nimport type {TuiHandler} from '@taiga-ui/cdk/types';\n\nexport const TUI_MASK_CVC: TuiHandler<number, MaskitoOptions> = (length) => ({\n    mask: new Array(length).fill(TUI_DIGIT_REGEXP),\n});\n","import {maskitoDateOptionsGenerator} from '@maskito/kit';\n\nexport const TUI_MASK_EXPIRE = maskitoDateOptionsGenerator({\n    mode: 'mm/yy',\n    separator: '/',\n});\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;AAGa,MAAA,uBAAuB,GAA8B,CAAC,IAAI,KACnE,IAAI,CAAC,MAAM,GAAG,EAAE,IAAI,oBAAoB,CAAC,IAAI,CAAC,IAAI,oBAAoB,CAAC,IAAI;;ACDlE,MAAA,aAAa,GAAmB;AACzC,IAAA,IAAI,EAAE;QACF,gBAAgB;QAChB,gBAAgB;QAChB,gBAAgB;QAChB,gBAAgB;QAChB,GAAG;QACH,gBAAgB;QAChB,gBAAgB;QAChB,gBAAgB;QAChB,gBAAgB;QAChB,GAAG;QACH,gBAAgB;QAChB,gBAAgB;QAChB,gBAAgB;QAChB,gBAAgB;QAChB,GAAG;QACH,gBAAgB;QAChB,gBAAgB;QAChB,gBAAgB;QAChB,gBAAgB;QAChB,GAAG;QACH,gBAAgB;QAChB,gBAAgB;QAChB,gBAAgB;AACnB,KAAA;;;AC1BL,MAAM,GAAG,GAA2B;AAChkBAAkB,CAAC,KAAa,EAAA;AACrC,IAAA,OAAO,KAAK;AACP,SAAA,WAAW,EAAE;SACb,KAAK,CAAC,EAAE,CAAC;AACT,SAAA,GAAG,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC;SAChC,IAAI,CAAC,EAAE,CAAC,CAAC;AAClB,CAAC;AAEY,MAAA,oBAAoB,GAAmB;AAChD,IAAA,IAAI,EAAE,aAAa;AACnB,IAAA,aAAa,EAAE;AACX,QAAA,CAAC,EAAC,YAAY,EAAE,IAAI,EAAC,KAAI;AACrB,YAAA,MAAM,EAAC,KAAK,EAAE,SAAS,EAAC,GAAG,YAAY,CAAC;YAExC,OAAO;AACH,gBAAA,YAAY,EAAE;oBACV,SAAS;AACT,oBAAA,KAAK,EAAE,kBAAkB,CAAC,KAAK,CAAC;AACnC,iBAAA;AACD,gBAAA,IAAI,EAAE,kBAAkB,CAAC,IAAI,CAAC;aACjC,CAAC;SACL;AACJ,KAAA;;;MCjDQ,YAAY,GAAuC,CAAC,MAAM,MAAM;IACzE,IAAI,EAAE,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC;AACjD,CAAA;;ACJM,MAAM,eAAe,GAAG,2BAA2B,CAAC;AACvD,IAAA,IAAI,EAAE,OAAO;AACb,IAAA,SAAS,EAAE,GAAG;AACjB,CAAA;;ACLD;;AAEG;;;;"}