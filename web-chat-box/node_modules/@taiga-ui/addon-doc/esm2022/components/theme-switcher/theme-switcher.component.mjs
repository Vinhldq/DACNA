import { NgForOf } from '@angular/common';
import { ChangeDetectionStrategy, Component, inject } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { WA_LOCAL_STORAGE, WA_LOCATION } from '@ng-web-apis/common';
import { tuiCreateToken } from '@taiga-ui/cdk/utils/miscellaneous';
import { TuiButton } from '@taiga-ui/core/components/button';
import { TuiDataList } from '@taiga-ui/core/components/data-list';
import { TUI_THEME } from '@taiga-ui/core/tokens';
import { TuiSelectModule } from '@taiga-ui/legacy/components/select';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@taiga-ui/core/components/data-list";
import * as i3 from "@taiga-ui/legacy/components/select";
export const TUI_THEME_KEY = tuiCreateToken('data-tui-theme');
export const TUI_THEMES = tuiCreateToken({});
export function tuiDocThemeProvider() {
    return {
        provide: TUI_THEME,
        useFactory: () => inject(WA_LOCAL_STORAGE).getItem(inject(TUI_THEME_KEY)) || 'Taiga UI',
    };
}
class TuiDocThemeSwitcher {
    constructor() {
        this.storage = inject(WA_LOCAL_STORAGE);
        this.key = inject(TUI_THEME_KEY);
        this.location = inject(WA_LOCATION);
        this.theme = inject(TUI_THEME);
        this.themes = inject(TUI_THEMES);
        this.keys = Object.keys(this.themes);
    }
    onTheme(theme) {
        this.storage.setItem(this.key, theme);
        this.location.reload();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiDocThemeSwitcher, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiDocThemeSwitcher, isStandalone: true, selector: "tui-doc-theme-switcher", ngImport: i0, template: "<tui-select\n    [ngModel]=\"theme\"\n    (ngModelChange)=\"onTheme($event)\"\n>\n    <ng-content />\n    <tui-data-list *tuiDataList>\n        <button\n            *ngFor=\"let key of keys\"\n            tuiOption\n            type=\"button\"\n            [value]=\"key\"\n        >\n            <img\n                alt=\"\"\n                [src]=\"themes[key]\"\n                [style.margin-inline-end.rem]=\"0.5\"\n                [style.width.rem]=\"1.75\"\n            />\n            {{ key }}\n        </button>\n    </tui-data-list>\n</tui-select>\n", dependencies: [{ kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "component", type: i2.TuiDataListComponent, selector: "tui-data-list", inputs: ["emptyContent", "size"] }, { kind: "directive", type: i2.TuiDataListDirective, selector: "ng-template[tuiDataList]" }, { kind: "component", type: i2.TuiOption, selector: "button[tuiOption], a[tuiOption], label[tuiOption]", inputs: ["disabled", "value"] }, { kind: "ngmodule", type: TuiSelectModule }, { kind: "component", type: i3.TuiSelectComponent, selector: "tui-select", inputs: ["stringify", "identityMatcher", "valueContent"] }, { kind: "directive", type: i3.TuiSelectDirective, selector: "tui-select" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { TuiDocThemeSwitcher };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiDocThemeSwitcher, decorators: [{
            type: Component,
            args: [{ standalone: true, selector: 'tui-doc-theme-switcher', imports: [FormsModule, NgForOf, TuiButton, TuiDataList, TuiSelectModule], changeDetection: ChangeDetectionStrategy.OnPush, template: "<tui-select\n    [ngModel]=\"theme\"\n    (ngModelChange)=\"onTheme($event)\"\n>\n    <ng-content />\n    <tui-data-list *tuiDataList>\n        <button\n            *ngFor=\"let key of keys\"\n            tuiOption\n            type=\"button\"\n            [value]=\"key\"\n        >\n            <img\n                alt=\"\"\n                [src]=\"themes[key]\"\n                [style.margin-inline-end.rem]=\"0.5\"\n                [style.width.rem]=\"1.75\"\n            />\n            {{ key }}\n        </button>\n    </tui-data-list>\n</tui-select>\n" }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhlbWUtc3dpdGNoZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYWRkb24tZG9jL2NvbXBvbmVudHMvdGhlbWUtc3dpdGNoZXIvdGhlbWUtc3dpdGNoZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYWRkb24tZG9jL2NvbXBvbmVudHMvdGhlbWUtc3dpdGNoZXIvdGhlbWUtc3dpdGNoZXIudGVtcGxhdGUuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsT0FBTyxFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFFeEMsT0FBTyxFQUFDLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDekUsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQzNDLE9BQU8sRUFBQyxnQkFBZ0IsRUFBRSxXQUFXLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQUNsRSxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sbUNBQW1DLENBQUM7QUFDakUsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLGtDQUFrQyxDQUFDO0FBQzNELE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxxQ0FBcUMsQ0FBQztBQUNoRSxPQUFPLEVBQUMsU0FBUyxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFDaEQsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLG9DQUFvQyxDQUFDOzs7OztBQUVuRSxNQUFNLENBQUMsTUFBTSxhQUFhLEdBQUcsY0FBYyxDQUFDLGdCQUFnQixDQUFDLENBQUM7QUFDOUQsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFHLGNBQWMsQ0FBeUIsRUFBRSxDQUFDLENBQUM7QUFFckUsTUFBTSxVQUFVLG1CQUFtQjtJQUMvQixPQUFPO1FBQ0gsT0FBTyxFQUFFLFNBQVM7UUFDbEIsVUFBVSxFQUFFLEdBQUcsRUFBRSxDQUNiLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLENBQUMsSUFBSSxVQUFVO0tBQzVFLENBQUM7QUFDTixDQUFDO0FBRUQsTUFPYSxtQkFBbUI7SUFQaEM7UUFRcUIsWUFBTyxHQUFHLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBQ25DLFFBQUcsR0FBRyxNQUFNLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDNUIsYUFBUSxHQUFHLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUU3QixVQUFLLEdBQUcsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQzFCLFdBQU0sR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDNUIsU0FBSSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0tBTXREO0lBSlUsT0FBTyxDQUFDLEtBQWE7UUFDeEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUN0QyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQzNCLENBQUM7K0dBWlEsbUJBQW1CO21HQUFuQixtQkFBbUIsa0ZDN0JoQyxvakJBc0JBLDJDREdjLFdBQVcsK1ZBQUUsT0FBTywwY0FBMEIsZUFBZTs7U0FJOUQsbUJBQW1COzRGQUFuQixtQkFBbUI7a0JBUC9CLFNBQVM7aUNBQ00sSUFBSSxZQUNOLHdCQUF3QixXQUN6QixDQUFDLFdBQVcsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxlQUFlLENBQUMsbUJBRXZELHVCQUF1QixDQUFDLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge05nRm9yT2Z9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgdHlwZSB7RmFjdG9yeVByb3ZpZGVyfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7Q2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgaW5qZWN0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7Rm9ybXNNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7V0FfTE9DQUxfU1RPUkFHRSwgV0FfTE9DQVRJT059IGZyb20gJ0BuZy13ZWItYXBpcy9jb21tb24nO1xuaW1wb3J0IHt0dWlDcmVhdGVUb2tlbn0gZnJvbSAnQHRhaWdhLXVpL2Nkay91dGlscy9taXNjZWxsYW5lb3VzJztcbmltcG9ydCB7VHVpQnV0dG9ufSBmcm9tICdAdGFpZ2EtdWkvY29yZS9jb21wb25lbnRzL2J1dHRvbic7XG5pbXBvcnQge1R1aURhdGFMaXN0fSBmcm9tICdAdGFpZ2EtdWkvY29yZS9jb21wb25lbnRzL2RhdGEtbGlzdCc7XG5pbXBvcnQge1RVSV9USEVNRX0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvdG9rZW5zJztcbmltcG9ydCB7VHVpU2VsZWN0TW9kdWxlfSBmcm9tICdAdGFpZ2EtdWkvbGVnYWN5L2NvbXBvbmVudHMvc2VsZWN0JztcblxuZXhwb3J0IGNvbnN0IFRVSV9USEVNRV9LRVkgPSB0dWlDcmVhdGVUb2tlbignZGF0YS10dWktdGhlbWUnKTtcbmV4cG9ydCBjb25zdCBUVUlfVEhFTUVTID0gdHVpQ3JlYXRlVG9rZW48UmVjb3JkPHN0cmluZywgc3RyaW5nPj4oe30pO1xuXG5leHBvcnQgZnVuY3Rpb24gdHVpRG9jVGhlbWVQcm92aWRlcigpOiBGYWN0b3J5UHJvdmlkZXIge1xuICAgIHJldHVybiB7XG4gICAgICAgIHByb3ZpZGU6IFRVSV9USEVNRSxcbiAgICAgICAgdXNlRmFjdG9yeTogKCkgPT5cbiAgICAgICAgICAgIGluamVjdChXQV9MT0NBTF9TVE9SQUdFKS5nZXRJdGVtKGluamVjdChUVUlfVEhFTUVfS0VZKSkgfHwgJ1RhaWdhIFVJJyxcbiAgICB9O1xufVxuXG5AQ29tcG9uZW50KHtcbiAgICBzdGFuZGFsb25lOiB0cnVlLFxuICAgIHNlbGVjdG9yOiAndHVpLWRvYy10aGVtZS1zd2l0Y2hlcicsXG4gICAgaW1wb3J0czogW0Zvcm1zTW9kdWxlLCBOZ0Zvck9mLCBUdWlCdXR0b24sIFR1aURhdGFMaXN0LCBUdWlTZWxlY3RNb2R1bGVdLFxuICAgIHRlbXBsYXRlVXJsOiAnLi90aGVtZS1zd2l0Y2hlci50ZW1wbGF0ZS5odG1sJyxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgVHVpRG9jVGhlbWVTd2l0Y2hlciB7XG4gICAgcHJpdmF0ZSByZWFkb25seSBzdG9yYWdlID0gaW5qZWN0KFdBX0xPQ0FMX1NUT1JBR0UpO1xuICAgIHByaXZhdGUgcmVhZG9ubHkga2V5ID0gaW5qZWN0KFRVSV9USEVNRV9LRVkpO1xuICAgIHByaXZhdGUgcmVhZG9ubHkgbG9jYXRpb24gPSBpbmplY3QoV0FfTE9DQVRJT04pO1xuXG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IHRoZW1lID0gaW5qZWN0KFRVSV9USEVNRSk7XG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IHRoZW1lcyA9IGluamVjdChUVUlfVEhFTUVTKTtcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkga2V5cyA9IE9iamVjdC5rZXlzKHRoaXMudGhlbWVzKTtcblxuICAgIHB1YmxpYyBvblRoZW1lKHRoZW1lOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5zdG9yYWdlLnNldEl0ZW0odGhpcy5rZXksIHRoZW1lKTtcbiAgICAgICAgdGhpcy5sb2NhdGlvbi5yZWxvYWQoKTtcbiAgICB9XG59XG4iLCI8dHVpLXNlbGVjdFxuICAgIFtuZ01vZGVsXT1cInRoZW1lXCJcbiAgICAobmdNb2RlbENoYW5nZSk9XCJvblRoZW1lKCRldmVudClcIlxuPlxuICAgIDxuZy1jb250ZW50IC8+XG4gICAgPHR1aS1kYXRhLWxpc3QgKnR1aURhdGFMaXN0PlxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAqbmdGb3I9XCJsZXQga2V5IG9mIGtleXNcIlxuICAgICAgICAgICAgdHVpT3B0aW9uXG4gICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgIFt2YWx1ZV09XCJrZXlcIlxuICAgICAgICA+XG4gICAgICAgICAgICA8aW1nXG4gICAgICAgICAgICAgICAgYWx0PVwiXCJcbiAgICAgICAgICAgICAgICBbc3JjXT1cInRoZW1lc1trZXldXCJcbiAgICAgICAgICAgICAgICBbc3R5bGUubWFyZ2luLWlubGluZS1lbmQucmVtXT1cIjAuNVwiXG4gICAgICAgICAgICAgICAgW3N0eWxlLndpZHRoLnJlbV09XCIxLjc1XCJcbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICB7eyBrZXkgfX1cbiAgICAgICAgPC9idXR0b24+XG4gICAgPC90dWktZGF0YS1saXN0PlxuPC90dWktc2VsZWN0PlxuIl19