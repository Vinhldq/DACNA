import { isPlatformBrowser } from '@angular/common';
import { DestroyRef, Directive, inject, PLATFORM_ID } from '@angular/core';
import { WA_WINDOW } from '@ng-web-apis/common';
import { EMPTY_FUNCTION } from '@taiga-ui/cdk/constants';
import { tuiCreateToken, tuiFontSizeWatcher } from '@taiga-ui/cdk/utils/miscellaneous';
import * as i0 from "@angular/core";
export const TUI_FONT_SIZE_HANDLER = tuiCreateToken(EMPTY_FUNCTION);
class TuiFontSize {
    constructor() {
        this.nothing = inject(DestroyRef).onDestroy(isPlatformBrowser(inject(PLATFORM_ID)) && typeof ResizeObserver !== 'undefined'
            ? tuiFontSizeWatcher(inject(TUI_FONT_SIZE_HANDLER), inject(WA_WINDOW))
            : EMPTY_FUNCTION);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiFontSize, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: TuiFontSize, isStandalone: true, ngImport: i0 }); }
}
export { TuiFontSize };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiFontSize, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9udC1zaXplLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2Nkay9kaXJlY3RpdmVzL2ZvbnQtc2l6ZS9mb250LXNpemUuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQ2xELE9BQU8sRUFBQyxVQUFVLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDekUsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBQzlDLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQztBQUN2RCxPQUFPLEVBQUMsY0FBYyxFQUFFLGtCQUFrQixFQUFDLE1BQU0sbUNBQW1DLENBQUM7O0FBRXJGLE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUM5QixjQUFjLENBQXlCLGNBQWMsQ0FBQyxDQUFDO0FBRTNELE1BR2EsV0FBVztJQUh4QjtRQUl1QixZQUFPLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLFNBQVMsQ0FDckQsaUJBQWlCLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDLElBQUksT0FBTyxjQUFjLEtBQUssV0FBVztZQUMzRSxDQUFDLENBQUMsa0JBQWtCLENBQUMsTUFBTSxDQUFDLHFCQUFxQixDQUFDLEVBQUUsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQ3RFLENBQUMsQ0FBQyxjQUFjLENBQ3ZCLENBQUM7S0FDTDsrR0FOWSxXQUFXO21HQUFYLFdBQVc7O1NBQVgsV0FBVzs0RkFBWCxXQUFXO2tCQUh2QixTQUFTO21CQUFDO29CQUNQLFVBQVUsRUFBRSxJQUFJO2lCQUNuQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7aXNQbGF0Zm9ybUJyb3dzZXJ9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQge0Rlc3Ryb3lSZWYsIERpcmVjdGl2ZSwgaW5qZWN0LCBQTEFURk9STV9JRH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1dBX1dJTkRPV30gZnJvbSAnQG5nLXdlYi1hcGlzL2NvbW1vbic7XG5pbXBvcnQge0VNUFRZX0ZVTkNUSU9OfSBmcm9tICdAdGFpZ2EtdWkvY2RrL2NvbnN0YW50cyc7XG5pbXBvcnQge3R1aUNyZWF0ZVRva2VuLCB0dWlGb250U2l6ZVdhdGNoZXJ9IGZyb20gJ0B0YWlnYS11aS9jZGsvdXRpbHMvbWlzY2VsbGFuZW91cyc7XG5cbmV4cG9ydCBjb25zdCBUVUlfRk9OVF9TSVpFX0hBTkRMRVIgPVxuICAgIHR1aUNyZWF0ZVRva2VuPChzaXplOiBudW1iZXIpID0+IHZvaWQ+KEVNUFRZX0ZVTkNUSU9OKTtcblxuQERpcmVjdGl2ZSh7XG4gICAgc3RhbmRhbG9uZTogdHJ1ZSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpRm9udFNpemUge1xuICAgIHByb3RlY3RlZCByZWFkb25seSBub3RoaW5nID0gaW5qZWN0KERlc3Ryb3lSZWYpLm9uRGVzdHJveShcbiAgICAgICAgaXNQbGF0Zm9ybUJyb3dzZXIoaW5qZWN0KFBMQVRGT1JNX0lEKSkgJiYgdHlwZW9mIFJlc2l6ZU9ic2VydmVyICE9PSAndW5kZWZpbmVkJ1xuICAgICAgICAgICAgPyB0dWlGb250U2l6ZVdhdGNoZXIoaW5qZWN0KFRVSV9GT05UX1NJWkVfSEFORExFUiksIGluamVjdChXQV9XSU5ET1cpKVxuICAgICAgICAgICAgOiBFTVBUWV9GVU5DVElPTixcbiAgICApO1xufVxuIl19