import { effect, signal } from '@angular/core';
import { tuiInjectElement } from './inject-element';
/**
 * Host binding `host: {'[value]': 'yourSignal()'}` is not an option for our textfields –
 * they use {@link TuiTextfieldDirective} as a host directive.
 * `TuiTextfieldDirective` has host binding which depends on native input's value.
 * Host bindings of the host directives are re-calculated BEFORE component's ones –
 * native input's value should be updated SYNCHRONOUSLY before next change detection iteration.
 */
export function tuiValueBinding(value = signal(tuiInjectElement().value || '')) {
    const el = tuiInjectElement();
    effect(() => {
        if (el.value === value()) {
            return;
        }
        const { selectionStart, selectionEnd } = el;
        el.value = value();
        if (el.matches(':focus')) {
            /**
             * After programmatic updates of input's value, caret is automatically placed at the end –
             * revert to the previous position
             */
            el.setSelectionRange(selectionStart, selectionEnd);
        }
    });
    return value;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmFsdWUtYmluZGluZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2Nkay91dGlscy9kb20vdmFsdWUtYmluZGluZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUMsTUFBTSxFQUFFLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUU3QyxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUtsRDs7Ozs7O0dBTUc7QUFDSCxNQUFNLFVBQVUsZUFBZSxDQUMzQixRQUF3QixNQUFNLENBQUMsZ0JBQWdCLEVBQW9CLENBQUMsS0FBSyxJQUFJLEVBQUUsQ0FBQztJQUVoRixNQUFNLEVBQUUsR0FBRyxnQkFBZ0IsRUFBb0IsQ0FBQztJQUVoRCxNQUFNLENBQUMsR0FBRyxFQUFFO1FBQ1IsSUFBSSxFQUFFLENBQUMsS0FBSyxLQUFLLEtBQUssRUFBRSxFQUFFO1lBQ3RCLE9BQU87U0FDVjtRQUVELE1BQU0sRUFBQyxjQUFjLEVBQUUsWUFBWSxFQUFDLEdBQUcsRUFBRSxDQUFDO1FBRTFDLEVBQUUsQ0FBQyxLQUFLLEdBQUcsS0FBSyxFQUFFLENBQUM7UUFFbkIsSUFBSSxFQUFFLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFO1lBQ3RCOzs7ZUFHRztZQUNILEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxjQUFjLEVBQUUsWUFBWSxDQUFDLENBQUM7U0FDdEQ7SUFDTCxDQUFDLENBQUMsQ0FBQztJQUVILE9BQU8sS0FBSyxDQUFDO0FBQ2pCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7U2lnbmFsLCBXcml0YWJsZVNpZ25hbH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge2VmZmVjdCwgc2lnbmFsfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHt0dWlJbmplY3RFbGVtZW50fSBmcm9tICcuL2luamVjdC1lbGVtZW50JztcblxuZXhwb3J0IGZ1bmN0aW9uIHR1aVZhbHVlQmluZGluZyh2YWx1ZT86IFdyaXRhYmxlU2lnbmFsPHN0cmluZz4pOiBXcml0YWJsZVNpZ25hbDxzdHJpbmc+O1xuZXhwb3J0IGZ1bmN0aW9uIHR1aVZhbHVlQmluZGluZyh2YWx1ZT86IFNpZ25hbDxzdHJpbmc+KTogU2lnbmFsPHN0cmluZz47XG5cbi8qKlxuICogSG9zdCBiaW5kaW5nIGBob3N0OiB7J1t2YWx1ZV0nOiAneW91clNpZ25hbCgpJ31gIGlzIG5vdCBhbiBvcHRpb24gZm9yIG91ciB0ZXh0ZmllbGRzIOKAk1xuICogdGhleSB1c2Uge0BsaW5rIFR1aVRleHRmaWVsZERpcmVjdGl2ZX0gYXMgYSBob3N0IGRpcmVjdGl2ZS5cbiAqIGBUdWlUZXh0ZmllbGREaXJlY3RpdmVgIGhhcyBob3N0IGJpbmRpbmcgd2hpY2ggZGVwZW5kcyBvbiBuYXRpdmUgaW5wdXQncyB2YWx1ZS5cbiAqIEhvc3QgYmluZGluZ3Mgb2YgdGhlIGhvc3QgZGlyZWN0aXZlcyBhcmUgcmUtY2FsY3VsYXRlZCBCRUZPUkUgY29tcG9uZW50J3Mgb25lcyDigJNcbiAqIG5hdGl2ZSBpbnB1dCdzIHZhbHVlIHNob3VsZCBiZSB1cGRhdGVkIFNZTkNIUk9OT1VTTFkgYmVmb3JlIG5leHQgY2hhbmdlIGRldGVjdGlvbiBpdGVyYXRpb24uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0dWlWYWx1ZUJpbmRpbmcoXG4gICAgdmFsdWU6IFNpZ25hbDxzdHJpbmc+ID0gc2lnbmFsKHR1aUluamVjdEVsZW1lbnQ8SFRNTElucHV0RWxlbWVudD4oKS52YWx1ZSB8fCAnJyksXG4pOiBTaWduYWw8c3RyaW5nPiB7XG4gICAgY29uc3QgZWwgPSB0dWlJbmplY3RFbGVtZW50PEhUTUxJbnB1dEVsZW1lbnQ+KCk7XG5cbiAgICBlZmZlY3QoKCkgPT4ge1xuICAgICAgICBpZiAoZWwudmFsdWUgPT09IHZhbHVlKCkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHtzZWxlY3Rpb25TdGFydCwgc2VsZWN0aW9uRW5kfSA9IGVsO1xuXG4gICAgICAgIGVsLnZhbHVlID0gdmFsdWUoKTtcblxuICAgICAgICBpZiAoZWwubWF0Y2hlcygnOmZvY3VzJykpIHtcbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogQWZ0ZXIgcHJvZ3JhbW1hdGljIHVwZGF0ZXMgb2YgaW5wdXQncyB2YWx1ZSwgY2FyZXQgaXMgYXV0b21hdGljYWxseSBwbGFjZWQgYXQgdGhlIGVuZCDigJNcbiAgICAgICAgICAgICAqIHJldmVydCB0byB0aGUgcHJldmlvdXMgcG9zaXRpb25cbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgZWwuc2V0U2VsZWN0aW9uUmFuZ2Uoc2VsZWN0aW9uU3RhcnQsIHNlbGVjdGlvbkVuZCk7XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiB2YWx1ZTtcbn1cbiJdfQ==