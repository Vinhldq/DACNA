{"version":3,"file":"taiga-ui-kit-components-input-month.mjs","sources":["../../../projects/kit/components/input-month/input-month.options.ts","../../../projects/kit/components/input-month/input-month.directive.ts","../../../projects/kit/components/input-month/native-month-picker/native-month-picker.component.ts","../../../projects/kit/components/input-month/native-month-picker/native-month-picker.template.html","../../../projects/kit/components/input-month/input-month.ts","../../../projects/kit/components/input-month/taiga-ui-kit-components-input-month.ts"],"sourcesContent":["import type {TuiHandler} from '@taiga-ui/cdk/types';\nimport {tuiCreateOptions} from '@taiga-ui/cdk/utils/di';\nimport type {TuiSizeL, TuiSizeS} from '@taiga-ui/core/types';\n\nexport interface TuiInputMonthOptions {\n    readonly icon: TuiHandler<TuiSizeL | TuiSizeS, string>;\n}\n\nexport const TUI_INPUT_MONTH_DEFAULT_OPTIONS: TuiInputMonthOptions = {\n    icon: () => '@tui.calendar',\n};\n\nexport const [TUI_INPUT_MONTH_OPTIONS, tuiInputMonthOptionsProvider] = tuiCreateOptions(\n    TUI_INPUT_MONTH_DEFAULT_OPTIONS,\n);\n","import {computed, Directive, effect, inject} from '@angular/core';\nimport {toSignal} from '@angular/core/rxjs-interop';\nimport {tuiAsControl, TuiControl} from '@taiga-ui/cdk/classes';\nimport {TUI_ALLOW_SIGNAL_WRITES} from '@taiga-ui/cdk/constants';\nimport type {TuiMonth} from '@taiga-ui/cdk/date-time';\nimport {TUI_IS_MOBILE} from '@taiga-ui/cdk/tokens';\nimport {tuiInjectElement, tuiValueBinding} from '@taiga-ui/cdk/utils/dom';\nimport {tuiDirectiveBinding} from '@taiga-ui/cdk/utils/miscellaneous';\nimport {\n    TUI_TEXTFIELD_OPTIONS,\n    tuiInjectAuxiliary,\n    TuiWithTextfield,\n} from '@taiga-ui/core/components/textfield';\nimport {TUI_DROPDOWN_OPTIONS, tuiDropdownOpen} from '@taiga-ui/core/directives/dropdown';\nimport {TuiIcons} from '@taiga-ui/core/directives/icons';\nimport {TuiCalendarMonth} from '@taiga-ui/kit/components/calendar-month';\nimport {TUI_MONTH_FORMATTER} from '@taiga-ui/kit/tokens';\n\nimport {TUI_INPUT_MONTH_OPTIONS} from './input-month.options';\n\n@Directive({\n    standalone: true,\n    selector: 'input[tuiInputMonth]',\n    providers: [tuiAsControl(TuiInputMonthDirective)],\n    hostDirectives: [TuiWithTextfield],\n    host: {\n        inputmode: 'none',\n        '[disabled]': 'disabled()',\n        '(click)': 'toggleDropdown()',\n        '(blur)': 'onTouched()',\n        '(beforeinput)': '$event.inputType.includes(\"delete\") || $event.preventDefault()',\n        '(input)': '$event.inputType?.includes(\"delete\") && clear()',\n    },\n})\nexport class TuiInputMonthDirective extends TuiControl<TuiMonth | null> {\n    private readonly options = inject(TUI_INPUT_MONTH_OPTIONS);\n    private readonly textfieldOptions = inject(TUI_TEXTFIELD_OPTIONS);\n\n    private readonly open = tuiDropdownOpen();\n\n    private readonly formatter = toSignal(inject(TUI_MONTH_FORMATTER), {\n        initialValue: () => '',\n    });\n\n    protected readonly textfieldValue = tuiValueBinding(\n        computed(() => this.formatter()(this.value())),\n    );\n\n    protected readonly icon = tuiDirectiveBinding(\n        TuiIcons,\n        'iconEnd',\n        computed(() => this.options.icon(this.textfieldOptions.size())),\n        {},\n    );\n\n    protected readonly calendarSync = effect(() => {\n        this.calendar()?.value.set(this.value());\n    }, TUI_ALLOW_SIGNAL_WRITES);\n\n    protected onMonthClickEffect = effect((onCleanup) => {\n        const subscription = this.calendar()?.monthClick.subscribe((month) => {\n            this.onChange(month);\n            this.open.set(false);\n        });\n\n        onCleanup(() => subscription?.unsubscribe());\n    });\n\n    public readonly calendar = tuiInjectAuxiliary<TuiCalendarMonth>(\n        (x) => x instanceof TuiCalendarMonth,\n    );\n\n    public readonly nativePickerEnabled =\n        tuiInjectElement<HTMLInputElement>().type === 'month' && inject(TUI_IS_MOBILE);\n\n    constructor() {\n        super();\n\n        /**\n         * Update directive props with new defaults before inputs are processed\n         * TODO: find better way to override TuiDropdownFixed host directive from TuiTextfieldComponent\n         */\n        (inject(TUI_DROPDOWN_OPTIONS) as any).limitWidth = 'auto';\n    }\n\n    public override setDisabledState(): void {\n        super.setDisabledState();\n        this.open.set(false);\n    }\n\n    protected toggleDropdown(): void {\n        if (this.interactive() && !this.nativePickerEnabled) {\n            this.open.update((x) => !x);\n        }\n    }\n\n    protected clear(): void {\n        this.onChange(null);\n\n        if (!this.nativePickerEnabled) {\n            this.open.set(true);\n        }\n    }\n}\n","import {NgIf} from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    effect,\n    inject,\n    Input,\n    signal,\n    ViewEncapsulation,\n} from '@angular/core';\nimport {TuiControl} from '@taiga-ui/cdk/classes';\nimport {TUI_ALLOW_SIGNAL_WRITES} from '@taiga-ui/cdk/constants';\nimport {TUI_FIRST_DAY, TUI_LAST_DAY, TuiMonth} from '@taiga-ui/cdk/date-time';\nimport {TuiTextfieldContent} from '@taiga-ui/core/components/textfield';\n\nimport {TuiInputMonthDirective} from '../input-month.directive';\n\n@Component({\n    standalone: true,\n    selector: 'input[tuiInputMonth][type=\"month\"]',\n    imports: [NgIf, TuiTextfieldContent],\n    templateUrl: './native-month-picker.template.html',\n    styleUrls: ['./native-month-picker.style.less'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[type]': '\"text\"',\n    },\n})\nexport class TuiNativeMonthPicker {\n    private readonly control = inject(TuiControl);\n\n    protected readonly host = inject(TuiInputMonthDirective);\n    protected readonly min = signal<TuiMonth | null>(null);\n    protected readonly max = signal<TuiMonth | null>(null);\n    protected readonly calendarSync = effect(() => {\n        const calendar = this.host.calendar();\n\n        if (calendar) {\n            calendar.min.set(this.min() ?? TUI_FIRST_DAY); // TODO(v5): remove TUI_FIRST_DAY fallback\n            calendar.max.set(this.max() ?? TUI_LAST_DAY); // TODO(v5): remove TUI_LAST_DAY fallback\n        }\n    }, TUI_ALLOW_SIGNAL_WRITES);\n\n    // TODO(v5): use signal inputs\n    @Input('min')\n    public set minSetter(x: TuiMonth | null) {\n        this.min.set(x);\n    }\n\n    // TODO(v5): use signal inputs\n    @Input('max')\n    public set maxSetter(x: TuiMonth | null) {\n        this.max.set(x);\n    }\n\n    protected onInput(value: string): void {\n        if (!value) {\n            return this.control.onChange(null);\n        }\n\n        const [year = 0, month = 0] = value.split('-').map(Number);\n\n        this.control.onChange(new TuiMonth(year, month - 1));\n    }\n}\n","<ng-container *ngIf=\"host.nativePickerEnabled\">\n    <input\n        *tuiTextfieldContent\n        type=\"month\"\n        [max]=\"max()?.toJSON()\"\n        [min]=\"min()?.toJSON()\"\n        [value]=\"host.value()?.toJSON()\"\n        (click.stop.zoneless)=\"(0)\"\n        (input)=\"onInput($any($event.target).value)\"\n        (mousedown.stop.zoneless)=\"(0)\"\n    />\n</ng-container>\n","import {TuiCalendarMonth} from '@taiga-ui/kit/components/calendar-month';\n\nimport {TuiInputMonthDirective} from './input-month.directive';\nimport {TuiNativeMonthPicker} from './native-month-picker/native-month-picker.component';\n\nexport const TuiInputMonth = [\n    TuiInputMonthDirective,\n    TuiCalendarMonth,\n    TuiNativeMonthPicker,\n] as const;\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}